name: Lint
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.0.2
      - name: Install Go
        uses: actions/setup-go@v3.2.0
        with:
          go-version-file: .go-version
          cache: true
          cache-dependency-path: '**/go.sum'
      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.46.2
      - name: Get golangci-lint cache path
        id: golangci-lint-cache-status
        run: |
          echo "::set-output name=dir::$(golangci-lint cache status | head -1 | sed 's/^Dir: //')"
      - name: Set up golangci-lint cache
        uses: actions/cache@v3.0.2
        with:
          key: golangci-lint-${{ runner.os }}-golangci-lint-${{ hashFiles('**/go.mod') }}
          restore-keys: golangci-lint-${{ runner.os }}-golangci-lint-
          path: ${{ steps.golangci-lint-cache-status.outputs.dir }}
      - name: Run golangci-lint
        run: |
          golangci-lint run --out-format=github-actions -- \
            $(go work edit -json | jq -c -r '[.Use[].DiskPath] | map_values(. + "/...")[]')

  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - name: Create config
        run: |
          cat >commitlint.config.js <<EOF
          module.exports = {
            extends: ['@commitlint/config-conventional'],
            rules: {
              'body-max-line-length': [0],
            },
          }
          EOF
      - name: Run commitlint
        uses: wagoid/commitlint-github-action@v4.1.12
